{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction CartViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.name);\n  }\n}\n\nfunction CartViewComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name should be valid and least longer than 1 character. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CartViewComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, CartViewComponent_div_6_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkoutForm.controls[\"name\"].errors == null ? null : ctx_r1.checkoutForm.controls[\"name\"].errors[\"forbiddenName\"]);\n  }\n}\n\nfunction CartViewComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Enter valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CartViewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, CartViewComponent_div_11_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.checkoutForm.controls[\"email\"].errors == null ? null : ctx_r2.checkoutForm.controls[\"email\"].errors[\"forbiddenName\"]);\n  }\n}\n\nexport let CartViewComponent = /*#__PURE__*/(() => {\n  class CartViewComponent {\n    constructor(cartService, formBuilder) {\n      this.cartService = cartService;\n      this.formBuilder = formBuilder;\n      this.items = this.cartService.getItems();\n      this.checkoutForm = this.formBuilder.group({\n        name: ['', this.Validator(/^[a-zA-Z]+\\s{0,1}[a-zA-Z]+$/)],\n        email: ['', this.Validator(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)],\n        address: ''\n      });\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      var _a, _b;\n\n      this.items = this.cartService.clearCart();\n\n      if (((_a = this.checkoutForm.controls['name'].errors) === null || _a === void 0 ? void 0 : _a['forbiddenName']) || ((_b = this.checkoutForm.controls['email'].errors) === null || _b === void 0 ? void 0 : _b['forbiddenName'])) {\n        alert(\"there is error in form\");\n      } else {\n        alert(\"form submitted\");\n        this.checkoutForm.reset();\n      }\n    }\n\n    Validator(regex) {\n      return control => {\n        const forbidden = !regex.test(control.value);\n        return forbidden ? {\n          forbiddenName: {\n            value: control.value\n          }\n        } : null;\n      };\n    }\n\n  }\n\n  CartViewComponent.ɵfac = function CartViewComponent_Factory(t) {\n    return new (t || CartViewComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  CartViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CartViewComponent,\n    selectors: [[\"app-cart-view\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function CartViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CartViewComponent_div_0_Template, 3, 1, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CartViewComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"label\", 2);\n        i0.ɵɵtext(4, \" Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, CartViewComponent_div_6_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\");\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \" Email \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, CartViewComponent_div_11_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(12, \"div\");\n        i0.ɵɵelementStart(13, \"label\", 7);\n        i0.ɵɵtext(14, \" Address \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Confirm\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm.controls[\"name\"].invalid && (ctx.checkoutForm.controls[\"name\"].dirty || ctx.checkoutForm.controls[\"name\"].touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm.controls[\"email\"].invalid && (ctx.checkoutForm.controls[\"email\"].dirty || ctx.checkoutForm.controls[\"email\"].touched));\n      }\n    },\n    directives: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i3.NgIf],\n    styles: [\"\"]\n  });\n  return CartViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}